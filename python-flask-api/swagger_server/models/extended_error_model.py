# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.err import Err  # noqa: F401,E501
from swagger_server import util


class ExtendedErrorModel(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, root_cause: str=None):  # noqa: E501
        """ExtendedErrorModel - a model defined in Swagger

        :param root_cause: The root_cause of this ExtendedErrorModel.  # noqa: E501
        :type root_cause: str
        """
        self.swagger_types = {
            'root_cause': str
        }

        self.attribute_map = {
            'root_cause': 'rootCause'
        }

        self._root_cause = root_cause

    @classmethod
    def from_dict(cls, dikt) -> 'ExtendedErrorModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ExtendedErrorModel of this ExtendedErrorModel.  # noqa: E501
        :rtype: ExtendedErrorModel
        """
        return util.deserialize_model(dikt, cls)

    @property
    def root_cause(self) -> str:
        """Gets the root_cause of this ExtendedErrorModel.


        :return: The root_cause of this ExtendedErrorModel.
        :rtype: str
        """
        return self._root_cause

    @root_cause.setter
    def root_cause(self, root_cause: str):
        """Sets the root_cause of this ExtendedErrorModel.


        :param root_cause: The root_cause of this ExtendedErrorModel.
        :type root_cause: str
        """
        if root_cause is None:
            raise ValueError("Invalid value for `root_cause`, must not be `None`")  # noqa: E501

        self._root_cause = root_cause
