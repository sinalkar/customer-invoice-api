# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.invoice_product_item import InvoiceProductItem  # noqa: F401,E501
from swagger_server import util


class InvoiceProduct(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, i_product_id: int=None, v_product_name: str=None, arr_product_item: List[InvoiceProductItem]=None, e_status: str=None, dt_created: datetime=None, dt_updated: datetime=None):  # noqa: E501
        """InvoiceProduct - a model defined in Swagger

        :param i_product_id: The i_product_id of this InvoiceProduct.  # noqa: E501
        :type i_product_id: int
        :param v_product_name: The v_product_name of this InvoiceProduct.  # noqa: E501
        :type v_product_name: str
        :param arr_product_item: The arr_product_item of this InvoiceProduct.  # noqa: E501
        :type arr_product_item: List[InvoiceProductItem]
        :param e_status: The e_status of this InvoiceProduct.  # noqa: E501
        :type e_status: str
        :param dt_created: The dt_created of this InvoiceProduct.  # noqa: E501
        :type dt_created: datetime
        :param dt_updated: The dt_updated of this InvoiceProduct.  # noqa: E501
        :type dt_updated: datetime
        """
        self.swagger_types = {
            'i_product_id': int,
            'v_product_name': str,
            'arr_product_item': List[InvoiceProductItem],
            'e_status': str,
            'dt_created': datetime,
            'dt_updated': datetime
        }

        self.attribute_map = {
            'i_product_id': 'iProductId',
            'v_product_name': 'vProductName',
            'arr_product_item': 'arrProductItem',
            'e_status': 'eStatus',
            'dt_created': 'dtCreated',
            'dt_updated': 'dtUpdated'
        }

        self._i_product_id = i_product_id
        self._v_product_name = v_product_name
        self._arr_product_item = arr_product_item
        self._e_status = e_status
        self._dt_created = dt_created
        self._dt_updated = dt_updated

    @classmethod
    def from_dict(cls, dikt) -> 'InvoiceProduct':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The invoice_product of this InvoiceProduct.  # noqa: E501
        :rtype: InvoiceProduct
        """
        return util.deserialize_model(dikt, cls)

    @property
    def i_product_id(self) -> int:
        """Gets the i_product_id of this InvoiceProduct.


        :return: The i_product_id of this InvoiceProduct.
        :rtype: int
        """
        return self._i_product_id

    @i_product_id.setter
    def i_product_id(self, i_product_id: int):
        """Sets the i_product_id of this InvoiceProduct.


        :param i_product_id: The i_product_id of this InvoiceProduct.
        :type i_product_id: int
        """

        self._i_product_id = i_product_id

    @property
    def v_product_name(self) -> str:
        """Gets the v_product_name of this InvoiceProduct.


        :return: The v_product_name of this InvoiceProduct.
        :rtype: str
        """
        return self._v_product_name

    @v_product_name.setter
    def v_product_name(self, v_product_name: str):
        """Sets the v_product_name of this InvoiceProduct.


        :param v_product_name: The v_product_name of this InvoiceProduct.
        :type v_product_name: str
        """

        self._v_product_name = v_product_name

    @property
    def arr_product_item(self) -> List[InvoiceProductItem]:
        """Gets the arr_product_item of this InvoiceProduct.


        :return: The arr_product_item of this InvoiceProduct.
        :rtype: List[InvoiceProductItem]
        """
        return self._arr_product_item

    @arr_product_item.setter
    def arr_product_item(self, arr_product_item: List[InvoiceProductItem]):
        """Sets the arr_product_item of this InvoiceProduct.


        :param arr_product_item: The arr_product_item of this InvoiceProduct.
        :type arr_product_item: List[InvoiceProductItem]
        """

        self._arr_product_item = arr_product_item

    @property
    def e_status(self) -> str:
        """Gets the e_status of this InvoiceProduct.


        :return: The e_status of this InvoiceProduct.
        :rtype: str
        """
        return self._e_status

    @e_status.setter
    def e_status(self, e_status: str):
        """Sets the e_status of this InvoiceProduct.


        :param e_status: The e_status of this InvoiceProduct.
        :type e_status: str
        """
        allowed_values = ["Active", "InActive"]  # noqa: E501
        if e_status not in allowed_values:
            raise ValueError(
                "Invalid value for `e_status` ({0}), must be one of {1}"
                .format(e_status, allowed_values)
            )

        self._e_status = e_status

    @property
    def dt_created(self) -> datetime:
        """Gets the dt_created of this InvoiceProduct.


        :return: The dt_created of this InvoiceProduct.
        :rtype: datetime
        """
        return self._dt_created

    @dt_created.setter
    def dt_created(self, dt_created: datetime):
        """Sets the dt_created of this InvoiceProduct.


        :param dt_created: The dt_created of this InvoiceProduct.
        :type dt_created: datetime
        """

        self._dt_created = dt_created

    @property
    def dt_updated(self) -> datetime:
        """Gets the dt_updated of this InvoiceProduct.


        :return: The dt_updated of this InvoiceProduct.
        :rtype: datetime
        """
        return self._dt_updated

    @dt_updated.setter
    def dt_updated(self, dt_updated: datetime):
        """Sets the dt_updated of this InvoiceProduct.


        :param dt_updated: The dt_updated of this InvoiceProduct.
        :type dt_updated: datetime
        """

        self._dt_updated = dt_updated
