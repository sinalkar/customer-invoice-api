# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Account(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, v_username: str=None, v_password: str=None, v_mobile_number: str=None, v_email: str=None):  # noqa: E501
        """Account - a model defined in Swagger

        :param v_username: The v_username of this Account.  # noqa: E501
        :type v_username: str
        :param v_password: The v_password of this Account.  # noqa: E501
        :type v_password: str
        :param v_mobile_number: The v_mobile_number of this Account.  # noqa: E501
        :type v_mobile_number: str
        :param v_email: The v_email of this Account.  # noqa: E501
        :type v_email: str
        """
        self.swagger_types = {
            'v_username': str,
            'v_password': str,
            'v_mobile_number': str,
            'v_email': str
        }

        self.attribute_map = {
            'v_username': 'vUsername',
            'v_password': 'vPassword',
            'v_mobile_number': 'vMobileNumber',
            'v_email': 'vEmail'
        }

        self._v_username = v_username
        self._v_password = v_password
        self._v_mobile_number = v_mobile_number
        self._v_email = v_email

    @classmethod
    def from_dict(cls, dikt) -> 'Account':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The account of this Account.  # noqa: E501
        :rtype: Account
        """
        return util.deserialize_model(dikt, cls)

    @property
    def v_username(self) -> str:
        """Gets the v_username of this Account.

        Customer unique Username  # noqa: E501

        :return: The v_username of this Account.
        :rtype: str
        """
        return self._v_username

    @v_username.setter
    def v_username(self, v_username: str):
        """Sets the v_username of this Account.

        Customer unique Username  # noqa: E501

        :param v_username: The v_username of this Account.
        :type v_username: str
        """

        self._v_username = v_username

    @property
    def v_password(self) -> str:
        """Gets the v_password of this Account.

        Customer encrypted password  # noqa: E501

        :return: The v_password of this Account.
        :rtype: str
        """
        return self._v_password

    @v_password.setter
    def v_password(self, v_password: str):
        """Sets the v_password of this Account.

        Customer encrypted password  # noqa: E501

        :param v_password: The v_password of this Account.
        :type v_password: str
        """

        self._v_password = v_password

    @property
    def v_mobile_number(self) -> str:
        """Gets the v_mobile_number of this Account.

        Customer mobile Number  # noqa: E501

        :return: The v_mobile_number of this Account.
        :rtype: str
        """
        return self._v_mobile_number

    @v_mobile_number.setter
    def v_mobile_number(self, v_mobile_number: str):
        """Sets the v_mobile_number of this Account.

        Customer mobile Number  # noqa: E501

        :param v_mobile_number: The v_mobile_number of this Account.
        :type v_mobile_number: str
        """

        self._v_mobile_number = v_mobile_number

    @property
    def v_email(self) -> str:
        """Gets the v_email of this Account.

        Customer email id  # noqa: E501

        :return: The v_email of this Account.
        :rtype: str
        """
        return self._v_email

    @v_email.setter
    def v_email(self, v_email: str):
        """Sets the v_email of this Account.

        Customer email id  # noqa: E501

        :param v_email: The v_email of this Account.
        :type v_email: str
        """

        self._v_email = v_email
