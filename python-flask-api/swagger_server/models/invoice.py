# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.invoice_billing_address import InvoiceBillingAddress  # noqa: F401,E501
from swagger_server.models.invoice_brand import InvoiceBrand  # noqa: F401,E501
from swagger_server.models.invoice_product import InvoiceProduct  # noqa: F401,E501
from swagger_server.models.invoice_shipping_address import InvoiceShippingAddress  # noqa: F401,E501
from swagger_server import util


class Invoice(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, i_invoice_id: int=None, v_invoice_number: str=None, v_customer_name: str=None, v_customer_gst_number: str=None, v_billing_address: InvoiceBillingAddress=None, v_installation_address: InvoiceShippingAddress=None, v_customer_code: str=None, dt_invoice_date: date=None, dt_invoice_due_date: date=None, e_payment_method: str=None, e_payment_status: str=None, v_mobile_number: str=None, i_sac_code: int=None, o_product_items: InvoiceProduct=None, o_invoice_brand: InvoiceBrand=None, v_invoice_period: str=None, f_basic_amount: float=None, f_discount_amount: float=None, f_total_amount_before_tax: float=None, f_total_tax_amount: float=None, f_total_amount: float=None, dt_created: datetime=None, dt_updated: datetime=None):  # noqa: E501
        """Invoice - a model defined in Swagger

        :param i_invoice_id: The i_invoice_id of this Invoice.  # noqa: E501
        :type i_invoice_id: int
        :param v_invoice_number: The v_invoice_number of this Invoice.  # noqa: E501
        :type v_invoice_number: str
        :param v_customer_name: The v_customer_name of this Invoice.  # noqa: E501
        :type v_customer_name: str
        :param v_customer_gst_number: The v_customer_gst_number of this Invoice.  # noqa: E501
        :type v_customer_gst_number: str
        :param v_billing_address: The v_billing_address of this Invoice.  # noqa: E501
        :type v_billing_address: InvoiceBillingAddress
        :param v_installation_address: The v_installation_address of this Invoice.  # noqa: E501
        :type v_installation_address: InvoiceShippingAddress
        :param v_customer_code: The v_customer_code of this Invoice.  # noqa: E501
        :type v_customer_code: str
        :param dt_invoice_date: The dt_invoice_date of this Invoice.  # noqa: E501
        :type dt_invoice_date: date
        :param dt_invoice_due_date: The dt_invoice_due_date of this Invoice.  # noqa: E501
        :type dt_invoice_due_date: date
        :param e_payment_method: The e_payment_method of this Invoice.  # noqa: E501
        :type e_payment_method: str
        :param e_payment_status: The e_payment_status of this Invoice.  # noqa: E501
        :type e_payment_status: str
        :param v_mobile_number: The v_mobile_number of this Invoice.  # noqa: E501
        :type v_mobile_number: str
        :param i_sac_code: The i_sac_code of this Invoice.  # noqa: E501
        :type i_sac_code: int
        :param o_product_items: The o_product_items of this Invoice.  # noqa: E501
        :type o_product_items: InvoiceProduct
        :param o_invoice_brand: The o_invoice_brand of this Invoice.  # noqa: E501
        :type o_invoice_brand: InvoiceBrand
        :param v_invoice_period: The v_invoice_period of this Invoice.  # noqa: E501
        :type v_invoice_period: str
        :param f_basic_amount: The f_basic_amount of this Invoice.  # noqa: E501
        :type f_basic_amount: float
        :param f_discount_amount: The f_discount_amount of this Invoice.  # noqa: E501
        :type f_discount_amount: float
        :param f_total_amount_before_tax: The f_total_amount_before_tax of this Invoice.  # noqa: E501
        :type f_total_amount_before_tax: float
        :param f_total_tax_amount: The f_total_tax_amount of this Invoice.  # noqa: E501
        :type f_total_tax_amount: float
        :param f_total_amount: The f_total_amount of this Invoice.  # noqa: E501
        :type f_total_amount: float
        :param dt_created: The dt_created of this Invoice.  # noqa: E501
        :type dt_created: datetime
        :param dt_updated: The dt_updated of this Invoice.  # noqa: E501
        :type dt_updated: datetime
        """
        self.swagger_types = {
            'i_invoice_id': int,
            'v_invoice_number': str,
            'v_customer_name': str,
            'v_customer_gst_number': str,
            'v_billing_address': InvoiceBillingAddress,
            'v_installation_address': InvoiceShippingAddress,
            'v_customer_code': str,
            'dt_invoice_date': date,
            'dt_invoice_due_date': date,
            'e_payment_method': str,
            'e_payment_status': str,
            'v_mobile_number': str,
            'i_sac_code': int,
            'o_product_items': InvoiceProduct,
            'o_invoice_brand': InvoiceBrand,
            'v_invoice_period': str,
            'f_basic_amount': float,
            'f_discount_amount': float,
            'f_total_amount_before_tax': float,
            'f_total_tax_amount': float,
            'f_total_amount': float,
            'dt_created': datetime,
            'dt_updated': datetime
        }

        self.attribute_map = {
            'i_invoice_id': 'iInvoiceId',
            'v_invoice_number': 'vInvoiceNumber',
            'v_customer_name': 'vCustomerName',
            'v_customer_gst_number': 'vCustomerGSTNumber',
            'v_billing_address': 'vBillingAddress',
            'v_installation_address': 'vInstallationAddress',
            'v_customer_code': 'vCustomerCode',
            'dt_invoice_date': 'dtInvoiceDate',
            'dt_invoice_due_date': 'dtInvoiceDueDate',
            'e_payment_method': 'ePaymentMethod',
            'e_payment_status': 'ePaymentStatus',
            'v_mobile_number': 'vMobileNumber',
            'i_sac_code': 'iSACCode',
            'o_product_items': 'oProductItems',
            'o_invoice_brand': 'oInvoiceBrand',
            'v_invoice_period': 'vInvoicePeriod',
            'f_basic_amount': 'fBasicAmount',
            'f_discount_amount': 'fDiscountAmount',
            'f_total_amount_before_tax': 'fTotalAmountBeforeTax',
            'f_total_tax_amount': 'fTotalTaxAmount',
            'f_total_amount': 'fTotalAmount',
            'dt_created': 'dtCreated',
            'dt_updated': 'dtUpdated'
        }

        self._i_invoice_id = i_invoice_id
        self._v_invoice_number = v_invoice_number
        self._v_customer_name = v_customer_name
        self._v_customer_gst_number = v_customer_gst_number
        self._v_billing_address = v_billing_address
        self._v_installation_address = v_installation_address
        self._v_customer_code = v_customer_code
        self._dt_invoice_date = dt_invoice_date
        self._dt_invoice_due_date = dt_invoice_due_date
        self._e_payment_method = e_payment_method
        self._e_payment_status = e_payment_status
        self._v_mobile_number = v_mobile_number
        self._i_sac_code = i_sac_code
        self._o_product_items = o_product_items
        self._o_invoice_brand = o_invoice_brand
        self._v_invoice_period = v_invoice_period
        self._f_basic_amount = f_basic_amount
        self._f_discount_amount = f_discount_amount
        self._f_total_amount_before_tax = f_total_amount_before_tax
        self._f_total_tax_amount = f_total_tax_amount
        self._f_total_amount = f_total_amount
        self._dt_created = dt_created
        self._dt_updated = dt_updated

    @classmethod
    def from_dict(cls, dikt) -> 'Invoice':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The invoice of this Invoice.  # noqa: E501
        :rtype: Invoice
        """
        return util.deserialize_model(dikt, cls)

    @property
    def i_invoice_id(self) -> int:
        """Gets the i_invoice_id of this Invoice.


        :return: The i_invoice_id of this Invoice.
        :rtype: int
        """
        return self._i_invoice_id

    @i_invoice_id.setter
    def i_invoice_id(self, i_invoice_id: int):
        """Sets the i_invoice_id of this Invoice.


        :param i_invoice_id: The i_invoice_id of this Invoice.
        :type i_invoice_id: int
        """

        self._i_invoice_id = i_invoice_id

    @property
    def v_invoice_number(self) -> str:
        """Gets the v_invoice_number of this Invoice.


        :return: The v_invoice_number of this Invoice.
        :rtype: str
        """
        return self._v_invoice_number

    @v_invoice_number.setter
    def v_invoice_number(self, v_invoice_number: str):
        """Sets the v_invoice_number of this Invoice.


        :param v_invoice_number: The v_invoice_number of this Invoice.
        :type v_invoice_number: str
        """

        self._v_invoice_number = v_invoice_number

    @property
    def v_customer_name(self) -> str:
        """Gets the v_customer_name of this Invoice.


        :return: The v_customer_name of this Invoice.
        :rtype: str
        """
        return self._v_customer_name

    @v_customer_name.setter
    def v_customer_name(self, v_customer_name: str):
        """Sets the v_customer_name of this Invoice.


        :param v_customer_name: The v_customer_name of this Invoice.
        :type v_customer_name: str
        """

        self._v_customer_name = v_customer_name

    @property
    def v_customer_gst_number(self) -> str:
        """Gets the v_customer_gst_number of this Invoice.


        :return: The v_customer_gst_number of this Invoice.
        :rtype: str
        """
        return self._v_customer_gst_number

    @v_customer_gst_number.setter
    def v_customer_gst_number(self, v_customer_gst_number: str):
        """Sets the v_customer_gst_number of this Invoice.


        :param v_customer_gst_number: The v_customer_gst_number of this Invoice.
        :type v_customer_gst_number: str
        """

        self._v_customer_gst_number = v_customer_gst_number

    @property
    def v_billing_address(self) -> InvoiceBillingAddress:
        """Gets the v_billing_address of this Invoice.


        :return: The v_billing_address of this Invoice.
        :rtype: InvoiceBillingAddress
        """
        return self._v_billing_address

    @v_billing_address.setter
    def v_billing_address(self, v_billing_address: InvoiceBillingAddress):
        """Sets the v_billing_address of this Invoice.


        :param v_billing_address: The v_billing_address of this Invoice.
        :type v_billing_address: InvoiceBillingAddress
        """

        self._v_billing_address = v_billing_address

    @property
    def v_installation_address(self) -> InvoiceShippingAddress:
        """Gets the v_installation_address of this Invoice.


        :return: The v_installation_address of this Invoice.
        :rtype: InvoiceShippingAddress
        """
        return self._v_installation_address

    @v_installation_address.setter
    def v_installation_address(self, v_installation_address: InvoiceShippingAddress):
        """Sets the v_installation_address of this Invoice.


        :param v_installation_address: The v_installation_address of this Invoice.
        :type v_installation_address: InvoiceShippingAddress
        """

        self._v_installation_address = v_installation_address

    @property
    def v_customer_code(self) -> str:
        """Gets the v_customer_code of this Invoice.


        :return: The v_customer_code of this Invoice.
        :rtype: str
        """
        return self._v_customer_code

    @v_customer_code.setter
    def v_customer_code(self, v_customer_code: str):
        """Sets the v_customer_code of this Invoice.


        :param v_customer_code: The v_customer_code of this Invoice.
        :type v_customer_code: str
        """

        self._v_customer_code = v_customer_code

    @property
    def dt_invoice_date(self) -> date:
        """Gets the dt_invoice_date of this Invoice.


        :return: The dt_invoice_date of this Invoice.
        :rtype: date
        """
        return self._dt_invoice_date

    @dt_invoice_date.setter
    def dt_invoice_date(self, dt_invoice_date: date):
        """Sets the dt_invoice_date of this Invoice.


        :param dt_invoice_date: The dt_invoice_date of this Invoice.
        :type dt_invoice_date: date
        """

        self._dt_invoice_date = dt_invoice_date

    @property
    def dt_invoice_due_date(self) -> date:
        """Gets the dt_invoice_due_date of this Invoice.


        :return: The dt_invoice_due_date of this Invoice.
        :rtype: date
        """
        return self._dt_invoice_due_date

    @dt_invoice_due_date.setter
    def dt_invoice_due_date(self, dt_invoice_due_date: date):
        """Sets the dt_invoice_due_date of this Invoice.


        :param dt_invoice_due_date: The dt_invoice_due_date of this Invoice.
        :type dt_invoice_due_date: date
        """

        self._dt_invoice_due_date = dt_invoice_due_date

    @property
    def e_payment_method(self) -> str:
        """Gets the e_payment_method of this Invoice.


        :return: The e_payment_method of this Invoice.
        :rtype: str
        """
        return self._e_payment_method

    @e_payment_method.setter
    def e_payment_method(self, e_payment_method: str):
        """Sets the e_payment_method of this Invoice.


        :param e_payment_method: The e_payment_method of this Invoice.
        :type e_payment_method: str
        """
        allowed_values = ["Cash", "Cheque", "Online", "Wallet", "Swipe", "NEFT"]  # noqa: E501
        if e_payment_method not in allowed_values:
            raise ValueError(
                "Invalid value for `e_payment_method` ({0}), must be one of {1}"
                .format(e_payment_method, allowed_values)
            )

        self._e_payment_method = e_payment_method

    @property
    def e_payment_status(self) -> str:
        """Gets the e_payment_status of this Invoice.


        :return: The e_payment_status of this Invoice.
        :rtype: str
        """
        return self._e_payment_status

    @e_payment_status.setter
    def e_payment_status(self, e_payment_status: str):
        """Sets the e_payment_status of this Invoice.


        :param e_payment_status: The e_payment_status of this Invoice.
        :type e_payment_status: str
        """
        allowed_values = ["Unpaid", "Paid", "Partial"]  # noqa: E501
        if e_payment_status not in allowed_values:
            raise ValueError(
                "Invalid value for `e_payment_status` ({0}), must be one of {1}"
                .format(e_payment_status, allowed_values)
            )

        self._e_payment_status = e_payment_status

    @property
    def v_mobile_number(self) -> str:
        """Gets the v_mobile_number of this Invoice.


        :return: The v_mobile_number of this Invoice.
        :rtype: str
        """
        return self._v_mobile_number

    @v_mobile_number.setter
    def v_mobile_number(self, v_mobile_number: str):
        """Sets the v_mobile_number of this Invoice.


        :param v_mobile_number: The v_mobile_number of this Invoice.
        :type v_mobile_number: str
        """

        self._v_mobile_number = v_mobile_number

    @property
    def i_sac_code(self) -> int:
        """Gets the i_sac_code of this Invoice.


        :return: The i_sac_code of this Invoice.
        :rtype: int
        """
        return self._i_sac_code

    @i_sac_code.setter
    def i_sac_code(self, i_sac_code: int):
        """Sets the i_sac_code of this Invoice.


        :param i_sac_code: The i_sac_code of this Invoice.
        :type i_sac_code: int
        """

        self._i_sac_code = i_sac_code

    @property
    def o_product_items(self) -> InvoiceProduct:
        """Gets the o_product_items of this Invoice.


        :return: The o_product_items of this Invoice.
        :rtype: InvoiceProduct
        """
        return self._o_product_items

    @o_product_items.setter
    def o_product_items(self, o_product_items: InvoiceProduct):
        """Sets the o_product_items of this Invoice.


        :param o_product_items: The o_product_items of this Invoice.
        :type o_product_items: InvoiceProduct
        """

        self._o_product_items = o_product_items

    @property
    def o_invoice_brand(self) -> InvoiceBrand:
        """Gets the o_invoice_brand of this Invoice.


        :return: The o_invoice_brand of this Invoice.
        :rtype: InvoiceBrand
        """
        return self._o_invoice_brand

    @o_invoice_brand.setter
    def o_invoice_brand(self, o_invoice_brand: InvoiceBrand):
        """Sets the o_invoice_brand of this Invoice.


        :param o_invoice_brand: The o_invoice_brand of this Invoice.
        :type o_invoice_brand: InvoiceBrand
        """

        self._o_invoice_brand = o_invoice_brand

    @property
    def v_invoice_period(self) -> str:
        """Gets the v_invoice_period of this Invoice.


        :return: The v_invoice_period of this Invoice.
        :rtype: str
        """
        return self._v_invoice_period

    @v_invoice_period.setter
    def v_invoice_period(self, v_invoice_period: str):
        """Sets the v_invoice_period of this Invoice.


        :param v_invoice_period: The v_invoice_period of this Invoice.
        :type v_invoice_period: str
        """

        self._v_invoice_period = v_invoice_period

    @property
    def f_basic_amount(self) -> float:
        """Gets the f_basic_amount of this Invoice.


        :return: The f_basic_amount of this Invoice.
        :rtype: float
        """
        return self._f_basic_amount

    @f_basic_amount.setter
    def f_basic_amount(self, f_basic_amount: float):
        """Sets the f_basic_amount of this Invoice.


        :param f_basic_amount: The f_basic_amount of this Invoice.
        :type f_basic_amount: float
        """

        self._f_basic_amount = f_basic_amount

    @property
    def f_discount_amount(self) -> float:
        """Gets the f_discount_amount of this Invoice.


        :return: The f_discount_amount of this Invoice.
        :rtype: float
        """
        return self._f_discount_amount

    @f_discount_amount.setter
    def f_discount_amount(self, f_discount_amount: float):
        """Sets the f_discount_amount of this Invoice.


        :param f_discount_amount: The f_discount_amount of this Invoice.
        :type f_discount_amount: float
        """

        self._f_discount_amount = f_discount_amount

    @property
    def f_total_amount_before_tax(self) -> float:
        """Gets the f_total_amount_before_tax of this Invoice.


        :return: The f_total_amount_before_tax of this Invoice.
        :rtype: float
        """
        return self._f_total_amount_before_tax

    @f_total_amount_before_tax.setter
    def f_total_amount_before_tax(self, f_total_amount_before_tax: float):
        """Sets the f_total_amount_before_tax of this Invoice.


        :param f_total_amount_before_tax: The f_total_amount_before_tax of this Invoice.
        :type f_total_amount_before_tax: float
        """

        self._f_total_amount_before_tax = f_total_amount_before_tax

    @property
    def f_total_tax_amount(self) -> float:
        """Gets the f_total_tax_amount of this Invoice.


        :return: The f_total_tax_amount of this Invoice.
        :rtype: float
        """
        return self._f_total_tax_amount

    @f_total_tax_amount.setter
    def f_total_tax_amount(self, f_total_tax_amount: float):
        """Sets the f_total_tax_amount of this Invoice.


        :param f_total_tax_amount: The f_total_tax_amount of this Invoice.
        :type f_total_tax_amount: float
        """

        self._f_total_tax_amount = f_total_tax_amount

    @property
    def f_total_amount(self) -> float:
        """Gets the f_total_amount of this Invoice.


        :return: The f_total_amount of this Invoice.
        :rtype: float
        """
        return self._f_total_amount

    @f_total_amount.setter
    def f_total_amount(self, f_total_amount: float):
        """Sets the f_total_amount of this Invoice.


        :param f_total_amount: The f_total_amount of this Invoice.
        :type f_total_amount: float
        """

        self._f_total_amount = f_total_amount

    @property
    def dt_created(self) -> datetime:
        """Gets the dt_created of this Invoice.


        :return: The dt_created of this Invoice.
        :rtype: datetime
        """
        return self._dt_created

    @dt_created.setter
    def dt_created(self, dt_created: datetime):
        """Sets the dt_created of this Invoice.


        :param dt_created: The dt_created of this Invoice.
        :type dt_created: datetime
        """

        self._dt_created = dt_created

    @property
    def dt_updated(self) -> datetime:
        """Gets the dt_updated of this Invoice.


        :return: The dt_updated of this Invoice.
        :rtype: datetime
        """
        return self._dt_updated

    @dt_updated.setter
    def dt_updated(self, dt_updated: datetime):
        """Sets the dt_updated of this Invoice.


        :param dt_updated: The dt_updated of this Invoice.
        :type dt_updated: datetime
        """

        self._dt_updated = dt_updated
